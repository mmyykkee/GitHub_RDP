# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one. or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
name: CI



on: workflow_dispatch


name: Windows Server 2019

on: 

  workflow_dispatch:

jobs:

  build:

    name: Windows 10 Build

    runs-on: windows-latest

    timeout-minutes: 9999

    

    steps:

    - name: Creating Local User

      run: |

        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText $Env:WINDOWS_USER_PASSWORD -Force)

      env:

        WINDOWS_USER_PASSWORD: ${{ secrets.WINDOWS_USER_PASSWORD }}

    - name: Download

      run: |

       Invoke-WebRequest https://github.com/RealKoolisw/assets/blob/main/Github-RDP/ngrok.exe?raw=true -OutFile ngrok.exe

       Invoke-WebRequest https://github.com/RealKoolisw/assets/blob/main/Github-RDP/nssm.exe?raw=true -OutFile nssm.exe

       Invoke-WebRequest https://raw.githubusercontent.com/RealKoolisw/VirtualMachine-GithubAction/main/resources/ngrok-user.bat -OutFile ngrok-user.bat

       Invoke-WebRequest https://raw.githubusercontent.com/RealKoolisw/VirtualMachine-GithubAction/main/resources/ngrok-start.bat -OutFile ngrok-start.bat

       Invoke-WebRequest https://raw.githubusercontent.com/RealKoolisw/VirtualMachine-GithubAction/main/resources/ngrok-loop.bat -OutFile ngrok-loop.bat

    - name: Copy NSSM & Ngrok to Windows Directory.

      run: | 

        copy nssm.exe C:\Windows\System32

        copy ngrok.exe C:\Windows\System32

    - name: Auth

      run: .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN

      env:

        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Installing Ngrok Process as a Windows Core Services

      run: start ngrok-start.bat

    - name: Enable TS

      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0

    - name: Enabing Networking Firewall

      run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Setting up RDP TCP UserAuthentication

      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Create Tunnel

      run: sc start ngrok

    - name: Connecting Process

      run: cmd /c ngrok-user.bat

    - name: Looping Process

      run: cmd /c ngrok-loop.bat
jobs:



  build:



    runs-on: windows-latest



    timeout-minutes: 9999



    steps:



    - name: Download Ngrok & NSSM



      run: |

        Invoke-WebRequest https://github.com/avgchamara/WindowsRDP/raw/main/ngrok.exe -OutFile ngrok.exe

        Invoke-WebRequest https://github.com/avgchamara/WindowsRDP/raw/main/nssm.exe -OutFile nssm.exe

    - name: Copy NSSM & Ngrok to Windows Directory.



      run: | 

        copy nssm.exe C:\Windows\System32

        copy ngrok.exe C:\Windows\System32

    - name: Connect your NGROK account



      run: .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN



      env:



        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}



    - name: Download Important Files.



      run: |

        Invoke-WebRequest https://github.com/avgchamara/WindowsRDP/raw/main/NGROK-AP.bat -OutFile NGROK-AP.bat

        Invoke-WebRequest https://github.com/avgchamara/WindowsRDP/raw/main/NGROK-CHECK.bat -OutFile NGROK-CHECK.bat

        Invoke-WebRequest https://github.com/avgchamara/WindowsRDP/raw/main/loop.bat -OutFile loop.bat

    - name: Make YML file for NGROK.



      run: start NGROK-AP.bat



    - name: Enable RDP Access.



      run: | 

        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0

        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Create Tunnel



      run: sc start ngrok



    - name: Connect to your RDP 2core-7GB Ram.



      run: cmd /c NGROK-CHECK.bat



    - name: All Done! You can close Tab now! Maximum VM time:6h.



      run: cmd /c loop.bat
